name: Rust CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test_and_fuzz:
    name: Test and Fuzz
    runs-on: ubuntu-latest # Fuzzing is best supported on Linux

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: nightly
        components: rustfmt, clippy

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Check formatting
      run: cargo fmt --all -- --check

    - name: Run Clippy
      run: cargo clippy --all-targets --all-features
      env:
        RUSTFLAGS: ""

    - name: Run tests
      run: cargo test

    - name: Install cargo-fuzz
      run: cargo install cargo-fuzz --force

    - name: Fuzz namespace_ops (60s)
      run: cargo fuzz run namespace_ops -- -max_total_time=60

    - name: Fuzz batch_ops (60s)
      run: cargo fuzz run batch_ops -- -max_total_time=60

    - name: Fuzz persistence_snapshot (60s)
      run: cargo fuzz run persistence_snapshot -- -max_total_time=60

    - name: Fuzz namespace_management (60s)
      run: cargo fuzz run namespace_management -- -max_total_time=60

    - name: Fuzz configuration_ops (60s)
      run: cargo fuzz run configuration_ops -- -max_total_time=60